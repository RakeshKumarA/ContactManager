{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkaku\\\\Desktop\\\\Delphi\\\\delphi\\\\src\\\\components\\\\layout\\\\TextinputGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextinputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, label), React.createElement(\"input\", {\n    type: type,\n    name: name,\n    className: classnames('form-control form-control-lg', {\n      'is-invalid': error\n    }),\n    placeholder: placeholder,\n    value: value,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, error));\n};\n\nTextinputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\nTextinputGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextinputGroup;","map":{"version":3,"sources":["C:\\Users\\rkaku\\Desktop\\Delphi\\delphi\\src\\components\\layout\\TextinputGroup.js"],"names":["React","PropTypes","classnames","TextinputGroup","label","name","value","placeholder","type","onChange","error","propTypes","string","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AACtBC,EAAAA,KADsB;AAEtBC,EAAAA,IAFsB;AAGtBC,EAAAA,KAHsB;AAItBC,EAAAA,WAJsB;AAKtBC,EAAAA,IALsB;AAMtBC,EAAAA,QANsB;AAOtBC,EAAAA;AAPsB,CAAD,KAQjB;AACJ,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEL,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,KAAvB,CADF,EAEE;AACE,IAAA,IAAI,EAAEI,IADR;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,SAAS,EAAEH,UAAU,CAAC,8BAAD,EAAiC;AACpD,oBAAcQ;AADsC,KAAjC,CAHvB;AAME,IAAA,WAAW,EAAEH,WANf;AAOE,IAAA,KAAK,EAAED,KAPT;AAQE,IAAA,QAAQ,EAAEG,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAYG;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCC,KAAnC,CAZH,CADF;AAgBD,CAzBD;;AA2BAP,cAAc,CAACQ,SAAf,GAA2B;AACzBN,EAAAA,IAAI,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UADE;AAEzBT,EAAAA,KAAK,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UAFC;AAGzBN,EAAAA,WAAW,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAHL;AAIzBL,EAAAA,IAAI,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UAJE;AAKzBP,EAAAA,KAAK,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UALC;AAMzBJ,EAAAA,QAAQ,EAAER,SAAS,CAACa,IAAV,CAAeD,UANA;AAOzBH,EAAAA,KAAK,EAAET,SAAS,CAACW,MAAV,CAAiBC;AAPC,CAA3B;AAUAV,cAAc,CAACY,YAAf,GAA8B;AAC5BP,EAAAA,IAAI,EAAE;AADsB,CAA9B;AAIA,eAAeL,cAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextinputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n      {<div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextinputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextinputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextinputGroup;\r\n"]},"metadata":{},"sourceType":"module"}