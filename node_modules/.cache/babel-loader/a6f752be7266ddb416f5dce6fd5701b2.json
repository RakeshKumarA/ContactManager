{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkaku\\\\Desktop\\\\Delphi\\\\delphi\\\\src\\\\components\\\\contacts\\\\EditContact.js\";\nimport React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextinputGroup from '../layout/TextinputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.onSubmit = async (dispatch, e) => {\n      e.preventDefault();\n      const _this$state = this.state,\n            name = _this$state.name,\n            email = _this$state.email,\n            phone = _this$state.phone; // Check for errors\n\n      if (name === '') {\n        this.setState({\n          errors: {\n            name: 'Name is required'\n          }\n        });\n        return;\n      }\n\n      if (email === '') {\n        this.setState({\n          errors: {\n            email: 'Email is required'\n          }\n        });\n        return;\n      }\n\n      if (phone === '') {\n        this.setState({\n          errors: {\n            phone: 'Phone is required'\n          }\n        });\n        return;\n      }\n\n      const updContact = {\n        name,\n        email,\n        phone\n      };\n      const id = this.props.match.params.id;\n      const res = await this.setState({\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n      });\n      this.props.history.push('/');\n    };\n  }\n\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users/\".concat(id));\n    const contact = res.data;\n    const name = contact.name,\n          email = contact.email,\n          phone = contact.phone;\n    this.setState({\n      name,\n      email,\n      phone\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          name = _this$state2.name,\n          email = _this$state2.email,\n          phone = _this$state2.phone,\n          errors = _this$state2.errors;\n    return React.createElement(Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, value => {\n      const dispatch = value.dispatch;\n      return React.createElement(\"div\", {\n        className: \"card mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Edit Contact\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit.bind(this, dispatch),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(TextinputGroup, {\n        label: \"Name\",\n        name: \"name\",\n        placeholder: \"Enter Name\",\n        value: name,\n        onChange: this.onChange,\n        error: errors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(TextinputGroup, {\n        label: \"Email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: this.onChange,\n        error: errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(TextinputGroup, {\n        label: \"Phone\",\n        name: \"phone\",\n        placeholder: \"Enter Phone\",\n        value: phone,\n        onChange: this.onChange,\n        error: errors.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Update Contact\",\n        className: \"btn btn-block btn-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))));\n    });\n  }\n\n}\n\nexport default EditContact;","map":{"version":3,"sources":["C:\\Users\\rkaku\\Desktop\\Delphi\\delphi\\src\\components\\contacts\\EditContact.js"],"names":["React","Component","Consumer","TextinputGroup","axios","EditContact","state","name","email","phone","errors","onChange","e","setState","target","value","onSubmit","dispatch","preventDefault","updContact","id","props","match","params","res","history","push","componentDidMount","get","contact","data","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextinputGroup from '../layout/TextinputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    const { name, email, phone } = contact;\r\n    this.setState({\r\n      name,\r\n      email,\r\n      phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextinputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextinputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextinputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  ></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n"]},"metadata":{},"sourceType":"module"}